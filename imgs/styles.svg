<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="10px" preserveAspectRatio="none" style="width:10px;height:10px;" version="1.1" viewBox="0 0 10 10" width="10px" zoomAndPan="magnify"><defs/><g><!--MD5=[20c339d468142f38e088ecdcd64b1e57]
@startuml
skinparam usecase {
  backgroundColor skyblue
  BorderColor skyblue
  BackgroundColor<< Correct >> lightgreen
  BorderColor<< Correct >> lightgreen
  ArrowColor black
  ActorBorderColor black
  ActorFontName Courier
  BackgroundColor<< Error >> Antiquewhite
  BorderColor<< Error >> Antiquewhite
}
skinparam sequence {
  LifeLineBorderColor Green
  ArrowColor black
  ParticipantBorderColor black
  ParticipantBackgroundColor GreenYellow
  ParticipantFontColor black
}
skinparam actor {
  backgroundColor white
  borderColor slategray
}

skinparam entity {
  backgroundColor white
  borderColor slategray
}

skinparam state {
  StartColor green
  EndColor Red
  BackgroundColor white
  BackgroundColor<<Warning>> Olive
  BorderColor black
  ArrowColor Olive
  BarColor green
}
skinparam activity {
  StartColor green
  BarColor black
  EndColor red
  BackgroundColor white
  DiamondBackgroundColor white
  DiamondBorderColor red
  BorderColor black
  ArrowColor black
}
skinparam cloud {
  borderColor lightgray
  backgroundColor white
}
skinparam node {
  borderColor black
  backgroundColor Yellow
}
skinparam interface {
  borderColor black
  backgroundColor lime
}
skinparam component {
  borderColor slategray
  backgroundColor white
}
skinparam file {
  borderColor black
  backgroundColor white
}
skinparam queue {
  borderColor black
  backgroundColor springgreen
}
skinparam database {
  borderColor slategray
  backgroundColor white
}
skinparam agent {
  borderColor black
  backgroundColor white
}
skinparam rectangle {
  borderColor black
  backgroundColor white
}
skinparam card {
  borderColor black
  backgroundColor white
}
skinparam note {
  borderColor black
  backgroundColor lightCyan
}
skinparam title {
  FontSize 18
}

skinparam class {
  BackgroundColor white
  ArrowColor black
  BorderColor black
}

skinparam boundary {
  BackgroundColor white
  ArrowColor black
  BorderColor slategray
}

skinparam control {
  BackgroundColor white
  ArrowColor black
  BorderColor slategray
}

skinparam package {
  borderColor slategray
  'backgroundColor<<register>> LightSkyBlue
}
@enduml

@startuml
skinparam usecase {
  backgroundColor skyblue
  BorderColor skyblue
  BackgroundColor<< Correct >> lightgreen
  BorderColor<< Correct >> lightgreen
  ArrowColor black
  ActorBorderColor black
  ActorFontName Courier
  BackgroundColor<< Error >> Antiquewhite
  BorderColor<< Error >> Antiquewhite
}
skinparam sequence {
  LifeLineBorderColor Green
  ArrowColor black
  ParticipantBorderColor black
  ParticipantBackgroundColor GreenYellow
  ParticipantFontColor black
}
skinparam actor {
  backgroundColor white
  borderColor slategray
}

skinparam entity {
  backgroundColor white
  borderColor slategray
}

skinparam state {
  StartColor green
  EndColor Red
  BackgroundColor white
  BackgroundColor<<Warning>> Olive
  BorderColor black
  ArrowColor Olive
  BarColor green
}
skinparam activity {
  StartColor green
  BarColor black
  EndColor red
  BackgroundColor white
  DiamondBackgroundColor white
  DiamondBorderColor red
  BorderColor black
  ArrowColor black
}
skinparam cloud {
  borderColor lightgray
  backgroundColor white
}
skinparam node {
  borderColor black
  backgroundColor Yellow
}
skinparam interface {
  borderColor black
  backgroundColor lime
}
skinparam component {
  borderColor slategray
  backgroundColor white
}
skinparam file {
  borderColor black
  backgroundColor white
}
skinparam queue {
  borderColor black
  backgroundColor springgreen
}
skinparam database {
  borderColor slategray
  backgroundColor white
}
skinparam agent {
  borderColor black
  backgroundColor white
}
skinparam rectangle {
  borderColor black
  backgroundColor white
}
skinparam card {
  borderColor black
  backgroundColor white
}
skinparam note {
  borderColor black
  backgroundColor lightCyan
}
skinparam title {
  FontSize 18
}

skinparam class {
  BackgroundColor white
  ArrowColor black
  BorderColor black
}

skinparam boundary {
  BackgroundColor white
  ArrowColor black
  BorderColor slategray
}

skinparam control {
  BackgroundColor white
  ArrowColor black
  BorderColor slategray
}

skinparam package {
  borderColor slategray
}
@enduml

PlantUML version 1.2020.24(Fri Dec 18 17:00:36 UTC 2020)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>